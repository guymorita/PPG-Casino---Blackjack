// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.AppView = (function(_super) {
    __extends(AppView, _super);

    function AppView() {
      _ref = AppView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    AppView.prototype.template = _.template('\
    <section class="padding bck theme features" style="height: 510px;">\
      <div class="row text center book">\
        <div class="column_10 offset_1">\
          <h1 class="color default">Dealer Wins All Ties</h1>\
        </div>\
\
      <div class="column_4 radius padding-top padding-bottom on-right">\
          <div class="dealer-hand-container"><span class="playingCards"><ul class="table"></ul></span></div>\
        </div>\
      <div class="column_4 radius padding-top padding-bottom on-left">\
        <div class="player-hand-container"><span class="playingCards"><ul class="table"></ul></span></div>\
      </div>\
      </div>\
    </section>\
\
    <section class="padding bck dark">\
      <div class="row text center book margin-bottom" id="hit_stand_buttons">\
        <div class="column_10 offset_1">\
          <h1 class="color theme">Place Your Bets</h1>\
          <div></div>\
          <button class="hit-button alert">Hit</button> <button class="stand-button alert">Stand</button>\
            </br>\
            </br>\
          <div class="chip-container"></div>\
        </div>\
      </div>\
    </section>\
    ');

    AppView.prototype.events = {
      "click .hit-button": function() {
        return this.model.get('playerHand').hit();
      },
      "click .stand-button": function() {
        return this.model.get('playerHand').stand();
      }
    };

    AppView.prototype.initialize = function() {
      var _this = this;
      this.model.on('change', this.render, this);
      this.model.get('stack').on('change:betSet', function() {
        return _this.renderCards();
      });
      return this.render();
    };

    AppView.prototype.render = function() {
      this.$el.children().detach();
      this.$el.append(this.template());
      return this.$('.chip-container').html(new ChipView({
        model: this.model.get('stack')
      }).el);
    };

    AppView.prototype.renderCards = function() {
      this.$('.player-hand-container span ul').html(new HandView({
        collection: this.model.get('playerHand')
      }).el);
      return this.$('.dealer-hand-container span ul').html(new HandView({
        collection: this.model.get('dealerHand')
      }).el);
    };

    return AppView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=AppView.map
*/
